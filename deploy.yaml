AWSTemplateFormatVersion: '2010-09-09'
Description: Bucket Antivirus Quickstart Template
Parameters:
  AVBucketType:
    Type: String
    Description: Specifies if the bucket to hold the AV deinitions should be "public"
      or "private". Only choose "public" if other accounts need to access this bucket."
    Default: public
    AllowedValues:
    - public
    - private
  SourceBucket:
    Type: String
    Description: Name of the source bucket whose objects will be scanned. If more
      than one source bucket, the others will have to be manually added to the AV
      Scanner Policy after creation.
    Default: source-cf-bucket
    AllowedPattern: .+
Conditions:
  publicBucket:
    Fn::Equals:
    - Ref: AVBucketType
    - public
Resources:
  S3BucketAVDefinitions:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
        - '-'
        - - antivirus-definitions
          - Fn::Select:
            - 0
            - Fn::Split:
              - '-'
              - Fn::Select:
                - 2
                - Fn::Split:
                  - /
                  - Ref: AWS::StackId
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      AccessControl: BucketOwnerFullControl
      PublicAccessBlockConfiguration:
        BlockPublicAcls:
          Fn::If:
          - publicBucket
          - false
          - true
        BlockPublicPolicy:
          Fn::If:
          - publicBucket
          - false
          - true
        IgnorePublicAcls:
          Fn::If:
          - publicBucket
          - false
          - true
        RestrictPublicBuckets:
          Fn::If:
          - publicBucket
          - false
          - true
      Tags:
      - Key: Service
        Value: bucket-antivirus
      VersioningConfiguration:
        Status: Suspended
  S3BucketPolicyAVDefinitions:
    Type: AWS::S3::BucketPolicy
    Condition: publicBucket
    Properties:
      Bucket:
        Ref: S3BucketAVDefinitions
      PolicyDocument:
        Statement:
        - Sid: AllowPublic
          Action:
          - s3:GetObject
          - s3:GetObjectTagging
          Effect: Allow
          Principal:
            AWS:
            - '*'
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: S3BucketAVDefinitions
  IamRoleAVDefinitions:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AVDefinitionsLambdaRoleCF
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
      - Key: Service
        Value: bucket-antivirus
  IamRoleAVScanner:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AVScannerLambdaRoleCF
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Tags:
      - Key: Service
        Value: bucket-antivirus
  IamPolicyAVDefinitions:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AVDefinitionsLambdaPolicyCF
      Roles:
      - Ref: IamRoleAVDefinitions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: WriteCloudWatchLogs
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
        - Sid: S3GetAndPutWithTagging
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectTagging
          - s3:PutObject
          - s3:PutObjectTagging
          - s3:PutObjectVersionTagging
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: S3BucketAVDefinitions
        - Sid: S3HeadObject
          Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: S3BucketAVDefinitions
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}
            - BucketName:
                Ref: S3BucketAVDefinitions
  IamPolicyAVScanner:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AVScannerLambdaPolicyCF
      Roles:
      - Ref: IamRoleAVScanner
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: WriteCloudWatchLogs
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
        - Sid: S3AVScan
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectTagging
          - s3:GetObjectVersion
          - s3:PutObjectTagging
          - s3:PutObjectVersionTagging
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${SourceBucketName}/*
            - SourceBucketName:
                Ref: SourceBucket
        - Sid: S3AVDefinitions
          Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectTagging
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: S3BucketAVDefinitions
        - Sid: KmsDecrypt
          Effect: Allow
          Action:
          - kms:Decrypt
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${SourceBucketName}/*
            - SourceBucketName:
                Ref: SourceBucket
        - Sid: SNSPublic
          Effect: Allow
          Action:
          - sns:Publish
          Resource:
          - arn:aws:sns:::<av-scan-start>
          - arn:aws:sns:::<av-status>
        - Sid: S3HeadObject
          Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}/*
            - BucketName:
                Ref: S3BucketAVDefinitions
          - Fn::Sub:
            - arn:aws:s3:::${BucketName}
            - BucketName:
                Ref: S3BucketAVDefinitions
  LambdaAVUpdateDefinitions:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: avUpdateDefinitionsCF
      Description: LambdaFunction to update the AntiVirus definitions in the AV Definitions
        bucket.
      Runtime: python3.7
      Code:
        S3Bucket: nova-sam-dev
        S3Key: 670cc3e81e8540c710a8237d8199b4a9
      Handler: update.lambda_handler
      MemorySize: 1024
      Timeout: 300
      Role:
        Fn::GetAtt:
        - IamRoleAVDefinitions
        - Arn
      Environment:
        Variables:
          AV_DEFINITION_S3_BUCKET:
            Ref: S3BucketAVDefinitions
      Tags:
      - Key: Service
        Value: bucket-antivirus
  LambdaAVUpdateDefinitionsSchedule:
    Type: AWS::Events::Rule
    DependsOn:
    - LambdaAVUpdateDefinitions
    Properties:
      Name: LambdaAVUpdateDefinitionsScheduleCF
      Description: A schedule for the AV Update Definitions Lambda function.
      ScheduleExpression: rate(3 hours)
      State: ENABLED
      Targets:
      - Arn:
          Fn::Sub: ${LambdaAVUpdateDefinitions.Arn}
        Id: LambdaAVUpdateDefinitionsSchedule
  LambdaAVUpdateDefinitionsSchedulePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - LambdaAVUpdateDefinitionsSchedule
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: ${LambdaAVUpdateDefinitions.Arn}
      Principal: events.amazonaws.com
      SourceArn:
        Fn::Sub: ${LambdaAVUpdateDefinitionsSchedule.Arn}
  LambdaAVScanner:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: avScannerCF
      Description: LambdaFunction to scan newly uploaded objects in S3.
      Runtime: python3.7
      Code:
        S3Bucket: nova-sam-dev
        S3Key: 670cc3e81e8540c710a8237d8199b4a9
      Handler: scan.lambda_handler
      MemorySize: 1500
      Timeout: 300
      Role:
        Fn::GetAtt:
        - IamRoleAVScanner
        - Arn
      Environment:
        Variables:
          AV_DEFINITION_S3_BUCKET:
            Ref: S3BucketAVDefinitions
      Tags:
      - Key: Service
        Value: bucket-antivirus
  S3BucketTestAV:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: SourceBucket
      AccessControl: Private
  ExampleInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn: LambdaAVScanner
    Properties:
      FunctionName:
        Fn::GetAtt:
        - LambdaAVScanner
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - S3BucketTestAV
        - Arn
Outputs:
  S3BucketAvDefinitions:
    Value:
      Ref: S3BucketAVDefinitions
    Description: S3 Bucket for the AV Definitions
  LambdaAVUpdateDefinitions:
    Value:
      Ref: LambdaAVUpdateDefinitions
    Description: Lambda function to update the Antivirus Definitions in its respective
      bucket
  LambdaAVScanner:
    Value:
      Ref: LambdaAVScanner
    Description: Lambda function to scan newly created S3 objects
  IamRoleAVScanner:
    Value:
      Ref: IamRoleAVScanner
    Description: IAM Role used by the Lambda Scanner function. Edit its policy to
      add/change source S3 buckets, and also to enable SNS functionality if desired
